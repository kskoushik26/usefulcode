
import { Component, OnInit } from '@angular/core';
import {FormBuilder,FormControl,Validators,ReactiveFormsModule} from '@angular/forms';
import {RestServiceService } from '../rest-service.service';
import { User } from '../user';

@Component({
  selector: 'app-user-entry-screen',
  templateUrl: './user-entry-screen.component.html',
  styleUrls: ['./user-entry-screen.component.css']
})
export class UserEntryScreenComponent implements OnInit {
  userEntryForm;
  pat ="[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@gmail.com";
 cpass;
//  user:User;


  constructor(private rest:RestServiceService,  private formBuilder:FormBuilder) { 
this. userEntryForm =this.formBuilder.group({ 
  firstName:new FormControl('',Validators.required),
  lastName:new FormControl('',Validators.required),
  globalId:new FormControl('',Validators.required),
  employeeId:new FormControl('',Validators.required),
  emailId:new FormControl('',[Validators.required,Validators.pattern(this.pat)]),
  createPassword:new FormControl('',Validators.required),
  confirmPassword:new FormControl('',Validators.required)
});
  }

  ngOnInit() {
  }
  onSubmit(de){
    console.log("submit");
    console.log(de);
  if(this.userEntryForm.invalid){
   this.userEntryForm.get('firstName').markAsTouched();
   this.userEntryForm.get('lastName').markAsTouched();
   this.userEntryForm.get('globalId').markAsTouched();
   this.userEntryForm.get('employeeId').markAsTouched();  
   this.userEntryForm.get('emailId').markAsTouched();
   this.userEntryForm.get('createPassword').markAsTouched();
  this.userEntryForm.get('confirmpassword').markAsTouched();
   return false;
   
 }else {
   if(this.cpass!=de.createPassword)
   alert("Password mismatch")
   else{ 
  //  this.user=new User(de.firstName,de.lastName,de.globalId,de.employeeId,de.emailId,de.createPassword);
   this.rest.addUser(new User(de.firstName,de.lastName,de.globalId,de.employeeId,de.emailId,de.createPassword)).subscribe();
 alert("Registered successfully");
   this.userEntryForm.reset();
}
 }
  }
 
onCancel(){
  alert("Data will be Cancelled");
  this.userEntryForm.reset();
  
}

 

}
